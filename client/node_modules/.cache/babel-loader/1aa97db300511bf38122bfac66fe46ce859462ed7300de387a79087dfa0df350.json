{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import api from'../config/axios';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);// Check if user is logged in on app start\nuseEffect(()=>{const checkAuth=async()=>{const token=localStorage.getItem('token');if(token){try{const response=await api.get('/auth/profile');setUser(response.data.user);}catch(error){console.error('Auth check failed:',error);localStorage.removeItem('token');// Don't redirect here, let the ProtectedRoute handle it\n}}setLoading(false);};checkAuth();},[]);const login=async(email,password)=>{try{const response=await api.post('/auth/login',{email,password});const{token,user}=response.data;localStorage.setItem('token',token);setUser(user);toast.success('Login successful!');return{success:true};}catch(error){var _error$response,_error$response$data;const message=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Login failed';toast.error(message);return{success:false,error:message};}};const register=async(name,email,password)=>{try{const response=await api.post('/auth/register',{name,email,password});const{token,user}=response.data;localStorage.setItem('token',token);setUser(user);toast.success('Registration successful!');return{success:true};}catch(error){var _error$response2,_error$response2$data;const message=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Registration failed';toast.error(message);return{success:false,error:message};}};const logout=()=>{localStorage.removeItem('token');setUser(null);toast.success('Logged out successfully');};const updateProfile=async(name,email)=>{try{const response=await api.put('/auth/profile',{name,email});setUser(response.data.user);toast.success('Profile updated successfully!');return{success:true};}catch(error){var _error$response3,_error$response3$data;const message=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Profile update failed';toast.error(message);return{success:false,error:message};}};const value={user,loading,login,register,logout,updateProfile};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","toast","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","checkAuth","token","localStorage","getItem","response","get","data","error","console","removeItem","login","email","password","post","setItem","success","_error$response","_error$response$data","message","register","name","_error$response2","_error$response2$data","logout","updateProfile","put","_error$response3","_error$response3$data","value","Provider"],"sources":["F:/Mondaysys/Project 3/Lightweight CRM for Freelancers/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../config/axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check if user is logged in on app start\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          const response = await api.get('/auth/profile');\r\n          setUser(response.data.user);\r\n        } catch (error) {\r\n          console.error('Auth check failed:', error);\r\n          localStorage.removeItem('token');\r\n          // Don't redirect here, let the ProtectedRoute handle it\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await api.post('/auth/login', {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      setUser(user);\r\n      \r\n      toast.success('Login successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n    try {\r\n      const response = await api.post('/auth/register', {\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n\r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      setUser(user);\r\n      \r\n      toast.success('Registration successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const updateProfile = async (name, email) => {\r\n    try {\r\n      const response = await api.put('/auth/profile', {\r\n        name,\r\n        email,\r\n      });\r\n\r\n      setUser(response.data.user);\r\n      toast.success('Profile updated successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Profile update failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}