{"ast":null,"code":"var _jsxFileName = \"F:\\\\Mondaysys\\\\Project 3\\\\Lightweight CRM for Freelancers\\\\client\\\\src\\\\contexts\\\\NavigationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/**\r\n * Navigation Context - Manages navigation history and context preservation\r\n * \r\n * This context provides a centralized way to manage navigation state,\r\n * history tracking, and context preservation across the application.\r\n */\n\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavigationContext = /*#__PURE__*/createContext();\nexport const useNavigation = () => {\n  _s();\n  const context = useContext(NavigationContext);\n  if (!context) {\n    throw new Error('useNavigation must be used within a NavigationProvider');\n  }\n  return context;\n};\n_s(useNavigation, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const NavigationProvider = ({\n  children\n}) => {\n  _s2();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Navigation state\n  const [navigationHistory, setNavigationHistory] = useState([]);\n  const [currentPage, setCurrentPage] = useState(null);\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\n  const [preservedState, setPreservedState] = useState({});\n\n  // Page configuration for navigation\n  const pageConfig = {\n    '/dashboard': {\n      title: 'Dashboard',\n      parent: null,\n      icon: 'Home'\n    },\n    '/clients': {\n      title: 'Clients',\n      parent: '/dashboard',\n      icon: 'Users'\n    },\n    '/clients/new': {\n      title: 'New Client',\n      parent: '/clients',\n      icon: 'UserPlus'\n    },\n    '/clients/:id': {\n      title: 'Client Details',\n      parent: '/clients',\n      icon: 'User'\n    },\n    '/clients/:id/edit': {\n      title: 'Edit Client',\n      parent: '/clients/:id',\n      icon: 'Edit'\n    },\n    '/projects': {\n      title: 'Projects',\n      parent: '/dashboard',\n      icon: 'FolderOpen'\n    },\n    '/projects/new': {\n      title: 'New Project',\n      parent: '/projects',\n      icon: 'Plus'\n    },\n    '/projects/:id': {\n      title: 'Project Details',\n      parent: '/projects',\n      icon: 'FolderOpen'\n    },\n    '/projects/:id/edit': {\n      title: 'Edit Project',\n      parent: '/projects/:id',\n      icon: 'Edit'\n    },\n    '/invoices': {\n      title: 'Invoices',\n      parent: '/dashboard',\n      icon: 'FileText'\n    },\n    '/invoices/new': {\n      title: 'New Invoice',\n      parent: '/invoices',\n      icon: 'Plus'\n    },\n    '/invoices/:id': {\n      title: 'Invoice Details',\n      parent: '/invoices',\n      icon: 'FileText'\n    },\n    '/invoices/:id/edit': {\n      title: 'Edit Invoice',\n      parent: '/invoices/:id',\n      icon: 'Edit'\n    },\n    '/analytics': {\n      title: 'Analytics',\n      parent: '/dashboard',\n      icon: 'TrendingUp'\n    },\n    '/payments': {\n      title: 'Payments',\n      parent: '/dashboard',\n      icon: 'CreditCard'\n    },\n    '/profile': {\n      title: 'Profile',\n      parent: '/dashboard',\n      icon: 'User'\n    }\n  };\n\n  // Get page configuration for current route\n  const getPageConfig = useCallback(pathname => {\n    // Try exact match first\n    if (pageConfig[pathname]) {\n      return pageConfig[pathname];\n    }\n\n    // Try pattern matching for dynamic routes\n    for (const [pattern, config] of Object.entries(pageConfig)) {\n      if (pattern.includes(':')) {\n        const regex = new RegExp(pattern.replace(/:[^/]+/g, '[^/]+'));\n        if (regex.test(pathname)) {\n          return config;\n        }\n      }\n    }\n    return {\n      title: 'Unknown Page',\n      parent: null,\n      icon: 'File'\n    };\n  }, []);\n\n  // Generate breadcrumbs for current route\n  const generateBreadcrumbs = useCallback(pathname => {\n    const config = getPageConfig(pathname);\n    const crumbs = [];\n\n    // Add current page\n    crumbs.push({\n      path: pathname,\n      title: config.title,\n      icon: config.icon,\n      current: true\n    });\n\n    // Add parent pages\n    let currentPath = pathname;\n    while (config.parent) {\n      const parentConfig = getPageConfig(config.parent);\n      if (parentConfig) {\n        crumbs.unshift({\n          path: config.parent,\n          title: parentConfig.title,\n          icon: parentConfig.icon,\n          current: false\n        });\n        currentPath = config.parent;\n      }\n      break; // Prevent infinite loop\n    }\n    return crumbs;\n  }, [getPageConfig]);\n\n  // Smart back navigation\n  const goBack = useCallback((fallbackRoute = '/dashboard') => {\n    if (navigationHistory.length > 1) {\n      // Go back to previous page in history\n      const previousPage = navigationHistory[navigationHistory.length - 2];\n      navigate(previousPage.path, {\n        state: {\n          ...previousPage.state,\n          preserveScroll: true\n        }\n      });\n    } else {\n      // Fallback to specified route\n      navigate(fallbackRoute);\n    }\n  }, [navigationHistory, navigate]);\n\n  // Navigate with context preservation\n  const navigateWithContext = useCallback((to, options = {}) => {\n    const currentState = {\n      path: location.pathname,\n      state: location.state,\n      timestamp: Date.now()\n    };\n\n    // Add to navigation history\n    setNavigationHistory(prev => [...prev, currentState]);\n\n    // Navigate to new page\n    navigate(to, {\n      ...options,\n      state: {\n        ...options.state,\n        from: location.pathname,\n        timestamp: Date.now()\n      }\n    });\n  }, [location, navigate]);\n\n  // Preserve state for current page\n  const preserveState = useCallback((key, state) => {\n    setPreservedState(prev => ({\n      ...prev,\n      [location.pathname]: {\n        ...prev[location.pathname],\n        [key]: state\n      }\n    }));\n  }, [location.pathname]);\n\n  // Restore state for current page\n  const restoreState = useCallback((key, defaultValue = null) => {\n    var _preservedState$locat;\n    return ((_preservedState$locat = preservedState[location.pathname]) === null || _preservedState$locat === void 0 ? void 0 : _preservedState$locat[key]) || defaultValue;\n  }, [preservedState, location.pathname]);\n\n  // Clear preserved state\n  const clearPreservedState = useCallback(key => {\n    if (key) {\n      setPreservedState(prev => ({\n        ...prev,\n        [location.pathname]: {\n          ...prev[location.pathname],\n          [key]: undefined\n        }\n      }));\n    } else {\n      setPreservedState(prev => ({\n        ...prev,\n        [location.pathname]: {}\n      }));\n    }\n  }, [location.pathname]);\n\n  // Update navigation state when location changes\n  useEffect(() => {\n    const config = getPageConfig(location.pathname);\n    setCurrentPage({\n      path: location.pathname,\n      title: config.title,\n      icon: config.icon,\n      parent: config.parent\n    });\n    setBreadcrumbs(generateBreadcrumbs(location.pathname));\n  }, [location.pathname, getPageConfig, generateBreadcrumbs]);\n\n  // Handle browser back/forward\n  useEffect(() => {\n    const handlePopState = event => {\n      var _event$state;\n      if ((_event$state = event.state) !== null && _event$state !== void 0 && _event$state.preserveScroll) {\n        // Restore scroll position\n        setTimeout(() => {\n          const scrollY = event.state.scrollY || 0;\n          window.scrollTo(0, scrollY);\n        }, 100);\n      }\n    };\n    window.addEventListener('popstate', handlePopState);\n    return () => window.removeEventListener('popstate', handlePopState);\n  }, []);\n\n  // Context value\n  const value = {\n    // Current page info\n    currentPage,\n    breadcrumbs,\n    // Navigation functions\n    goBack,\n    navigateWithContext,\n    // State preservation\n    preserveState,\n    restoreState,\n    clearPreservedState,\n    // History\n    navigationHistory,\n    // Utilities\n    getPageConfig,\n    generateBreadcrumbs\n  };\n  return /*#__PURE__*/_jsxDEV(NavigationContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n};\n_s2(NavigationProvider, \"NtO00mn8V62/tjO0fUJp2YRFrMU=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = NavigationProvider;\nexport default NavigationContext;\nvar _c;\n$RefreshReg$(_c, \"NavigationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","useLocation","useNavigate","jsxDEV","_jsxDEV","NavigationContext","useNavigation","_s","context","Error","NavigationProvider","children","_s2","location","navigate","navigationHistory","setNavigationHistory","currentPage","setCurrentPage","breadcrumbs","setBreadcrumbs","preservedState","setPreservedState","pageConfig","title","parent","icon","getPageConfig","pathname","pattern","config","Object","entries","includes","regex","RegExp","replace","test","generateBreadcrumbs","crumbs","push","path","current","currentPath","parentConfig","unshift","goBack","fallbackRoute","length","previousPage","state","preserveScroll","navigateWithContext","to","options","currentState","timestamp","Date","now","prev","from","preserveState","key","restoreState","defaultValue","_preservedState$locat","clearPreservedState","undefined","handlePopState","event","_event$state","setTimeout","scrollY","window","scrollTo","addEventListener","removeEventListener","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/Mondaysys/Project 3/Lightweight CRM for Freelancers/client/src/contexts/NavigationContext.js"],"sourcesContent":["/**\r\n * Navigation Context - Manages navigation history and context preservation\r\n * \r\n * This context provides a centralized way to manage navigation state,\r\n * history tracking, and context preservation across the application.\r\n */\r\n\r\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst NavigationContext = createContext();\r\n\r\nexport const useNavigation = () => {\r\n  const context = useContext(NavigationContext);\r\n  if (!context) {\r\n    throw new Error('useNavigation must be used within a NavigationProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const NavigationProvider = ({ children }) => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  \r\n  // Navigation state\r\n  const [navigationHistory, setNavigationHistory] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(null);\r\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\r\n  const [preservedState, setPreservedState] = useState({});\r\n\r\n  // Page configuration for navigation\r\n  const pageConfig = {\r\n    '/dashboard': { title: 'Dashboard', parent: null, icon: 'Home' },\r\n    '/clients': { title: 'Clients', parent: '/dashboard', icon: 'Users' },\r\n    '/clients/new': { title: 'New Client', parent: '/clients', icon: 'UserPlus' },\r\n    '/clients/:id': { title: 'Client Details', parent: '/clients', icon: 'User' },\r\n    '/clients/:id/edit': { title: 'Edit Client', parent: '/clients/:id', icon: 'Edit' },\r\n    '/projects': { title: 'Projects', parent: '/dashboard', icon: 'FolderOpen' },\r\n    '/projects/new': { title: 'New Project', parent: '/projects', icon: 'Plus' },\r\n    '/projects/:id': { title: 'Project Details', parent: '/projects', icon: 'FolderOpen' },\r\n    '/projects/:id/edit': { title: 'Edit Project', parent: '/projects/:id', icon: 'Edit' },\r\n    '/invoices': { title: 'Invoices', parent: '/dashboard', icon: 'FileText' },\r\n    '/invoices/new': { title: 'New Invoice', parent: '/invoices', icon: 'Plus' },\r\n    '/invoices/:id': { title: 'Invoice Details', parent: '/invoices', icon: 'FileText' },\r\n    '/invoices/:id/edit': { title: 'Edit Invoice', parent: '/invoices/:id', icon: 'Edit' },\r\n    '/analytics': { title: 'Analytics', parent: '/dashboard', icon: 'TrendingUp' },\r\n    '/payments': { title: 'Payments', parent: '/dashboard', icon: 'CreditCard' },\r\n    '/profile': { title: 'Profile', parent: '/dashboard', icon: 'User' }\r\n  };\r\n\r\n  // Get page configuration for current route\r\n  const getPageConfig = useCallback((pathname) => {\r\n    // Try exact match first\r\n    if (pageConfig[pathname]) {\r\n      return pageConfig[pathname];\r\n    }\r\n    \r\n    // Try pattern matching for dynamic routes\r\n    for (const [pattern, config] of Object.entries(pageConfig)) {\r\n      if (pattern.includes(':')) {\r\n        const regex = new RegExp(pattern.replace(/:[^/]+/g, '[^/]+'));\r\n        if (regex.test(pathname)) {\r\n          return config;\r\n        }\r\n      }\r\n    }\r\n    \r\n    return { title: 'Unknown Page', parent: null, icon: 'File' };\r\n  }, []);\r\n\r\n  // Generate breadcrumbs for current route\r\n  const generateBreadcrumbs = useCallback((pathname) => {\r\n    const config = getPageConfig(pathname);\r\n    const crumbs = [];\r\n    \r\n    // Add current page\r\n    crumbs.push({\r\n      path: pathname,\r\n      title: config.title,\r\n      icon: config.icon,\r\n      current: true\r\n    });\r\n    \r\n    // Add parent pages\r\n    let currentPath = pathname;\r\n    while (config.parent) {\r\n      const parentConfig = getPageConfig(config.parent);\r\n      if (parentConfig) {\r\n        crumbs.unshift({\r\n          path: config.parent,\r\n          title: parentConfig.title,\r\n          icon: parentConfig.icon,\r\n          current: false\r\n        });\r\n        currentPath = config.parent;\r\n      }\r\n      break; // Prevent infinite loop\r\n    }\r\n    \r\n    return crumbs;\r\n  }, [getPageConfig]);\r\n\r\n  // Smart back navigation\r\n  const goBack = useCallback((fallbackRoute = '/dashboard') => {\r\n    if (navigationHistory.length > 1) {\r\n      // Go back to previous page in history\r\n      const previousPage = navigationHistory[navigationHistory.length - 2];\r\n      navigate(previousPage.path, { \r\n        state: { \r\n          ...previousPage.state,\r\n          preserveScroll: true \r\n        } \r\n      });\r\n    } else {\r\n      // Fallback to specified route\r\n      navigate(fallbackRoute);\r\n    }\r\n  }, [navigationHistory, navigate]);\r\n\r\n  // Navigate with context preservation\r\n  const navigateWithContext = useCallback((to, options = {}) => {\r\n    const currentState = {\r\n      path: location.pathname,\r\n      state: location.state,\r\n      timestamp: Date.now()\r\n    };\r\n    \r\n    // Add to navigation history\r\n    setNavigationHistory(prev => [...prev, currentState]);\r\n    \r\n    // Navigate to new page\r\n    navigate(to, {\r\n      ...options,\r\n      state: {\r\n        ...options.state,\r\n        from: location.pathname,\r\n        timestamp: Date.now()\r\n      }\r\n    });\r\n  }, [location, navigate]);\r\n\r\n  // Preserve state for current page\r\n  const preserveState = useCallback((key, state) => {\r\n    setPreservedState(prev => ({\r\n      ...prev,\r\n      [location.pathname]: {\r\n        ...prev[location.pathname],\r\n        [key]: state\r\n      }\r\n    }));\r\n  }, [location.pathname]);\r\n\r\n  // Restore state for current page\r\n  const restoreState = useCallback((key, defaultValue = null) => {\r\n    return preservedState[location.pathname]?.[key] || defaultValue;\r\n  }, [preservedState, location.pathname]);\r\n\r\n  // Clear preserved state\r\n  const clearPreservedState = useCallback((key) => {\r\n    if (key) {\r\n      setPreservedState(prev => ({\r\n        ...prev,\r\n        [location.pathname]: {\r\n          ...prev[location.pathname],\r\n          [key]: undefined\r\n        }\r\n      }));\r\n    } else {\r\n      setPreservedState(prev => ({\r\n        ...prev,\r\n        [location.pathname]: {}\r\n      }));\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  // Update navigation state when location changes\r\n  useEffect(() => {\r\n    const config = getPageConfig(location.pathname);\r\n    setCurrentPage({\r\n      path: location.pathname,\r\n      title: config.title,\r\n      icon: config.icon,\r\n      parent: config.parent\r\n    });\r\n    \r\n    setBreadcrumbs(generateBreadcrumbs(location.pathname));\r\n  }, [location.pathname, getPageConfig, generateBreadcrumbs]);\r\n\r\n  // Handle browser back/forward\r\n  useEffect(() => {\r\n    const handlePopState = (event) => {\r\n      if (event.state?.preserveScroll) {\r\n        // Restore scroll position\r\n        setTimeout(() => {\r\n          const scrollY = event.state.scrollY || 0;\r\n          window.scrollTo(0, scrollY);\r\n        }, 100);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('popstate', handlePopState);\r\n    return () => window.removeEventListener('popstate', handlePopState);\r\n  }, []);\r\n\r\n  // Context value\r\n  const value = {\r\n    // Current page info\r\n    currentPage,\r\n    breadcrumbs,\r\n    \r\n    // Navigation functions\r\n    goBack,\r\n    navigateWithContext,\r\n    \r\n    // State preservation\r\n    preserveState,\r\n    restoreState,\r\n    clearPreservedState,\r\n    \r\n    // History\r\n    navigationHistory,\r\n    \r\n    // Utilities\r\n    getPageConfig,\r\n    generateBreadcrumbs\r\n  };\r\n\r\n  return (\r\n    <NavigationContext.Provider value={value}>\r\n      {children}\r\n    </NavigationContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NavigationContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}